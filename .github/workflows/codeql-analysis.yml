name: 'CodeQL'

on:
  push:
  pull_request:
    branches:
      - main

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language:
          - javascript
          - python
          - ruby
          - java

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          config-file: ./.github/codeql/config.yml
          languages: ${{ matrix.language }}

      - name: Autobuild
        if: matrix.language != 'java'
        uses: github/codeql-action/autobuild@v3

      - name: Import Java GPG key
        #This step will be removed from here once we add build profile for java. Let's keep it here for now :)
        run: |
          set +e 
          echo "$GPG_PRIVATE_KEY" | tr -d '\r' | sed '1s/^\xEF\xBB\xBF//' | sed '/^\s*$/d' | sed 's/^[ \t]*//;s/[ \t]*$//' > clean_gpg_key.asc
          gpg --batch --import clean_gpg_key.asc
          GPG_EXIT_CODE=$?

          set -e
          if [ $GPG_EXIT_CODE -ge 3 ]; then
            echo "GPG import failed with code $GPG_EXIT_CODE"
            exit $GPG_EXIT_CODE
          else
            echo "GPG key imported successfully"
          fi
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Build for Java and Kotlin
        if: matrix.language == 'java'
        run: |
          mvn clean install -f packages/java/metrics-core/pom.xml -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }}
          mvn clean install -f packages/java/metrics-spring/pom.xml -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }}
          mvn clean install -f packages/java/metrics-spring2/pom.xml -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
